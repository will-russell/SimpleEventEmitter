export class SimpleEventEmitter{constructor(){this._events=new Map}on(t,e){let n=this._events.get(t);return null==n&&(n=[],this._events.set(t,n)),n.push(e),()=>{this.off(t,e)}}off(t,e){const n=this._events.get(t);if(null==n)return;let s=n.indexOf(e);s>-1&&n.splice(s,1)}triggerEvent(t,e){const n=this._events.get(t);if(null==n)return;const s=[];return n.forEach(t=>{s.push(t.apply(null,e||[]))}),s}emit(t){const e=Array.prototype.slice.call(arguments,1);return this.triggerEvent(t,e)}}